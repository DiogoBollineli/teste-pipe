name: PipelineAS1

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch: 

jobs:
  build-job:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: instala dependencias Node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: instala dependencias
      run: npm install
    - name: realiza criacao da pasta build
      run: npm run build
    - name: Log in to Docker registry
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME}} -p ${{ secrets.DOCKER_PASSWORD}}  
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_IMAGE}}:latest .
    - name: Push Docker image to registry
      run: |
        docker push ${{ secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_IMAGE}}:latest


  test:
    runs-on: ubuntu-latest
    needs: [build-job]
    name: ZAP Security Test
    services:
      zaproxy:
        image: owasp/zap2docker-stable
        volumes:
          - /zap/wrk:/zap/wrk
          - /zap/.ZAP_D:/zap/.ZAP_D
          - /zap/wrk/deltas:/zap/wrk/deltas
          - /zap/wrk/sessions:/zap/wrk/sessions
        env: # Ensure proper indentation (2 spaces) for each key-value pair
          - ZAP_PORT=8090
          - ZAP_API_PORT=8091
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Run ZAP security scan
        run: |
          docker exec zaproxy zap-cli --zap-url http://localhost:8090 --spider --scan --html report.html --alert-level High --exit
    
      - name: Upload ZAP report
        uses: actions/upload-artifact@v2
        with:
          name: zap-report
          path: report.html
        
        

  deploy-job:
    runs-on: ubuntu-latest
    needs: [build-job ,test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Pull Docker image
        run: docker pull ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_IMAGE}}:${{secrets.TAG}}
      - name: Run Docker container 
        run: |
          docker run -d -p 8080:80 ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_IMAGE}}:${{secrets.TAG}}
